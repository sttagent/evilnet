---
- name: install wireguard packages
  dnf:
    name: wireguard-tools
    state: present
  tags:
    - wg-install


- name: install wireguard kernel module
  block:
    - name: install the module 
      dnf:
        name:
          - kmod-wireguard
        state: present
    
    - name: load wg module
      modprobe:
        name: wireguard
        state: present
  when: ansible_facts['distribution'] == 'Centos'
  tags:
    - wg-install


- name: check if key files exists
  block:
    - name: check if private key exists
      become_user: root
      stat:
        path: "{{ wireguard_directory }}/privatekey"
      register: wireguard_register_privatekey_file
      
    - name: check if public key exists
      become_user: root
      stat:
        path: "{{ wireguard_directory }}/publickey"
      register: wireguard_register_publickey_file


- name: generate new keys
  become: true
  become_user: root
  block:
    - name: create directory
      file:
        path: "{{ wireguard_directory }}"
        state: directory
        owner: root
        group: root
        mode: '0700'
    
    - name: generate privete key
      command: wg genkey
      register: wireguard_register_private_key
    
    - name: save key to file
      copy:
        content: "{{ wireguard_register_private_key.stdout }}"
        dest: "{{ wireguard_directory }}/privatekey"
        force: yes # overwrites file if content differs
        owner: root
        group: root
        mode: '0600'

    - name: generate public key
      command: wg pubkey
      args:
        stdin: "{{ wireguard_register_private_key.stdout }}"
      register: wireguard_register_public_key

    - name: save public key to file
      copy:
        content: "{{ wireguard_register_public_key.stdout }}"
        dest: "{{ wireguard_directory }}/publickey"
        force: yes # overwrites file if content differs
        owner: root
        group: root
        mode: '0600'

    - name: fetch wg server public key
      fetch:
        src: "{{ wireguard_directory }}/publickey"
        dest: "../wg"
      when:  inventory_hostname == 'vpnserver'
  when:
    - not wireguard_register_privatekey_file.stat.exists
    - not wireguard_register_publickey_file.stat.exists
  tags:
    - wg-gen-keys


- name: read keys and set key facts
  become: true
  become_user: root
  block:
    - name: read private key from file
      slurp:
        src: "{{ wireguard_directory }}/privatekey"
      register: wireguard_register_private_key_file

    - name: set private key fact
      set_fact:
        wireguard_private_key: "{{ wireguard_register_private_key_file['content'] | b64decode }}"

    - name: read public key from file
      slurp:
        src: "{{ wireguard_directory }}/publickey"
      register: wireguard_register_public_key_file
    
    - name: set public key fact
      set_fact:
        wireguard_private_key: "{{ wireguard_register_public_key_file['content'] | b64decode }}"
    
- name: genereate wireguard config
  become_user: root
  become: true
  template:
    src: etc/wireguard/wg.conf.j2
    dest: "{{ wireguard_directory }}/{{ wireguard_interface }}.conf"
    owner: "{{ wireguard_config_owner }}"
    group: "{{ wireguard_config_group }}"
    mode: "{{ wireguard_config_mode }}"
  notify:
    - 


- name: configure firewall for wg
  block:
    - name: add internal network interface to trusted zone
      firewalld:
        interface: "{{ vps_internal_net_interface }}"
        zone: trusted
        state: enabled
        permanent: yes
        immediate: yes
    
    - name: add source for eth1 interface
      firewalld:
        zone: trusted
        source: "{{ vps_internal_net }}"
        permanent: yes
        immediate: yes
        state: enabled

    - name: add internal network interface to trusted zone
      firewalld:
        interface: "{{ wireguard_interface }}"
        zone: trusted
        state: enabled
        permanent: yes
        immediate: yes

    - name: add source for wireguard interface
      firewalld:
        zone: trusted
        permanent: yes
        immediate: yes
        source: "{{ vps_wireguard_net }}"
        state: enabled
  tags:
    - wg-firewall




  
