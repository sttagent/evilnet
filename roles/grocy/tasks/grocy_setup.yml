---
- name: "stop {{ pod_name }} serice"
  systemd:
    scope: user
    name: "{{ item }}"
    enabled: true
    state: stopped
  with_items:
    - "container_{{ frontend_name }}"
    - "container_{{ backend_name }}"
    - "pod_{{ pod_name }}"
  loop_control:
    pause: 1
  ignore_errors: true

- name: "create {{ pod_name }} pod"
  containers.podman.podman_pod:
    name: "{{ pod_name }}"
    state: created
    add_host:
      - "backend:127.0.0.1"
    ports:
      - "{{ host_port }}:{{ pod_port }}"
    label:
      io.containers.autoupdate: registry

- name: "create {{ pod_name }}  backend container"
  containers.podman.podman_container:
    name: "{{ backend_name }}"
    image: "{{ backend_image }}:{{ backend_version }}"
    pod: "{{ pod_name }}"
    state: created
    detach: true
    tty: true
    env:
      GROCY_MODE: production
      GROCY_CULTURE: sv_SE
      GROCY_CURRENCY: SEK
    volumes:
      - "{{ ansible_env.HOME }}/{{ data }}:/var/www/data:Z,U"
    label:
      io.containers.autoupdate: registry

- name: "create {{ pod_name }} frontend container"
  containers.podman.podman_container:
    name: "{{ frontend_name }}"
    image: "{{ frontend_image }}:{{ frontend_version }}"
    pod: "{{ pod_name }}"
    state: created
    detach: true
    tty: true
    label:
      io.containers.autoupdate: registry

- name: "generate {{ pod_name }} service files"
  containers.podman.podman_generate_systemd:
    name: "{{ pod_name }}"
    use_names: true
    separator: "_"
    dest: "{{ ansible_env.HOME }}/.config/systemd/user"

- name: "start {{ pod_name }} serice"
  systemd:
    scope: user
    name: "{{ item }}"
    enabled: true
    state: started
    daemon_reload: true
  with_items:
    - "pod_{{ pod_name }}"
    - "container_{{ backend_name }}"
    - "container_{{ frontend_name }}"
  loop_control:
    pause: 1
